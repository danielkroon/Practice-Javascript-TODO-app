{"version":3,"sources":["main.js"],"names":[],"mappingsfile":"app.js","sourcesContent":["var todoRef = firebase.database().ref('todos');\n\nvar todoList = {\n\ttodos: [],\n\taddTodo: function(todoText, time) {\n\t\tvar data = \t{\n\t\t\ttodoText: todoText,\n\t\t\tcompleted: false,\n\t\t\ttime: time\n\t\t};\n\t\t\n\t\t // Get a key for a new Todo.\n\t\tvar newTodoKey = firebase.database().ref().child('todos').push().key;\n\t\t\n\t\t// Write the new todo data simultaneously in the todo list.\n\t\tvar updates = {};\n\t\tupdates['/todos/' + newTodoKey] = data;\n\t\t\n\t\treturn firebase.database().ref().update(updates);\t\n\t},\n\tchangeTodo: function(position, todoText, time) {\n\t\tthis.todos[position].todoText = todoText;\n\t\tthis.todos[position].time = time;\n\t},\n\tchangeTime: function(position, time) {\n\t\tthis.todos[position].time = time;\n\t},\n\tdeleteTodo: function(position) {\n\t\tthis.todos.splice(position, 1);\n\t\tvar todo = this.todos[position];\n\t\t\n\t\ttodoRef.remove();\n\t},\n\ttoggleCompleted: function(position) {\n\t\tvar todo = this.todos[position];\n\t\ttodo.completed = !todo.completed;\n\t},\n\ttoggleAll: function() {\n\t\tvar totalTodos = this.todos.length;\n\t\tvar completedTodos = 0;\n\t\t\n\t\t// Get number of compeleted todos\n\t\tthis.todos.forEach(function(todo) {\n\t\t\tif (todo.completed === true) {\n\t\t\t\tcompletedTodos++;\n\t\t\t}\n\t\t});\n\n\t\tthis.todos.forEach(function(todo) {\n\t\t\t// Case 1: If everything's true, make everything false.\n\t\t\tif (completedTodos === totalTodos) {\n\t\t\t\ttodo.completed = false;\n\t\t\t// Case 2: Otherwise, make everything true.\n\t\t\t} else {\n\t\t\t\ttodo.completed = true;\n\t\t\t}\t\n\t\t});\n\t}\n};\n\nvar handlers = {\n\taddTodo: function() {\n\t\tvar addTodoTextInput = document.getElementById('addTodoTextInput');\n\t\tvar addTodoTime = document.getElementById('addTodoTime');\n\t\ttodoList.addTodo(addTodoTextInput.value, addTodoTime.value);\n\t\taddTodoTextInput.value = '';\n\t\taddTodoTime.value = '';\n\t\t// view.displayTodos();\n\t},\n\tchangeTodo: function() {\n\t\tvar changeTodoPositionInput = document.getElementById('changeTodoPositionInput');\n\t\tvar changeTodoTextInput = document.getElementById('changeTodoTextInput');\n\t\tvar changeTodoTimeInput = document.getElementById('changeTodoTimeInput');\n\t\ttodoList.changeTodo(changeTodoPositionInput.valueAsNumber, changeTodoTextInput.value, changeTodoTimeInput.valueAsNumber);\n\t\tchangeTodoPositionInput.value = '';\n\t\tchangeTodoTextInput.value = '';\n\t\tchangeTodoTimeInput.value = '';\n\t\tview.displayTodos();\n\t},\n\tdeleteTodo: function(position) {\n\t\ttodoList.deleteTodo(position);\n\t\tview.displayTodos();\n\t},\n\ttoggleCompleted: function() {\n\t\tvar toggleCompletedPositionInput = document.getElementById('toggleCompletedPositionInput');\n\t\ttodoList.toggleCompleted(toggleCompletedPositionInput.valueAsNumber);\n\t\ttoggleCompletedPositionInput.value = '';\n\t\tview.displayTodos();\n\t},\n\ttoggleAll: function() {\n\t\ttodoList.toggleAll();\n\t\tview.displayTodos();\n\t}\n};\n\nvar view = {\n\tdisplayTodos: function() {\n\t\tvar todosUl = document.querySelector('ul');\n\t\ttodosUl.innerHTML = '';\n\t\t\n\t\t// this inside the forEach callback refers to the view object \n\t\ttodoList.todos.forEach(function(todo, position,) {\n\t\t\tvar todoLi = document.createElement('li');\n\t\t\tvar todoTextWithCompletion = '';\n\t\t\t\n\t\t\tif (todo.completed === true) {\n\t\t\t\ttodoTextWithCompletion = '(X) ' + todo.todoText + todo.time;\n\t\t\t} else {\n\t\t\t\ttodoTextWithCompletion = '( ) ' + todo.todoText + todo.time;\n\t\t\t}\n\t\t\t\n\t\t\ttodoLi.id = position;\n\t\t\ttodoLi.textContent = todoTextWithCompletion;\n\t\t\ttodoLi.appendChild(this.createDeleteButton());\n\t\t\ttodosUl.appendChild(todoLi);\n\t\t}, this);\n\t},\n\tcreateDeleteButton: function() {\n\t\tvar deleteButton = document.createElement('button');\n\t\tdeleteButton.textContent = 'Delete';\n\t\tdeleteButton.className = 'deleteButton';\n\t\treturn deleteButton;\n\t},\n\tsetUpEventListeners: function() {\n\t\tvar todosUl = document.querySelector('ul');\n\n\t\ttodosUl.addEventListener('click', function(event) {\n\t\t\t// Get the element that was clicked on.\n\t\t\tvar elementClicked = event.target;\n\t\t\t\n\t\t\t// Check if elementClicked is a delete button.\n\t\t\tif (elementClicked.className === 'deleteButton') {\n\t\t\t\thandlers.deleteTodo(parseInt(elementClicked.parentNode.id));\t\t\n\t\t\t}\n\t\t});\n\t}\n};\n\ntodoRef.on('child_added', function(data) {\n\ttodoList.todos.push(data.val());\n\tview.displayTodos();\n});\n\ntodoRef.on('child_removed', function(data) {\n\tconsole.log('todo removed', data.val());\n});\n\nview.setUpEventListeners();\n\n"]}